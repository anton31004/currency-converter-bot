package telegram

import (
	"log"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func InitBot(token string) (*tgbotapi.BotAPI, error) {
	bot, err := tgbotapi.NewBotAPI(token)
	if err != nil {
		return nil, err
	}

	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)

	return bot, nil
}

func StartBot(bot *tgbotapi.BotAPI) {
	u := tgbotapi.NewUpdate(0)
	u.Timeout = 60
	updates := bot.GetUpdatesChan(u)

	for update := range updates {
		if update.Message == nil {
			continue
		} else if update.Message.IsCommand() {
			err := handleMessage(update, bot)
			if err != nil {
				log.Println(err)
			}
		}
	}
}

func handleMessage(update tgbotapi.Update, bot *tgbotapi.BotAPI) error {
	chatID := update.Message.Chat.ID
	switch update.Message.Command() {
	case "start":
		replay(bot, "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!  \n–Ø ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∞–ª—é—Ç –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤.  \n\nüìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:  \n/start ‚Äî –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É  \n/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞  \n/list ‚Äî –∏—Å—Ç–æ—Ä–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π  \n/exchangerate ‚Äî —É–∑–Ω–∞—Ç—å –∫—É—Ä—Å –≤–∞–ª—é—Ç  \n/convert ‚Äî –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É\n", chatID)
	case "help":
		replay(bot, "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:\n\n/exchangerate <FROM> <TO>  \n‚Üí –ü–æ–∫–∞–∂—É –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å.  \n–ü—Ä–∏–º–µ—Ä: `/exchangerate USD EUR`\n\n/convert <FROM> <TO> <AMOUNT>  \n‚Üí –ü–µ—Ä–µ–≤–µ–¥—É —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É.  \n–ü—Ä–∏–º–µ—Ä: `/convert USD RUB 100`\n\n/list  \n‚Üí –û—Ç–æ–±—Ä–∞–∂—É –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π.\n", chatID)
	case "list":
		err := list(bot, update)
		if err != nil {
			return err
		}
	case "ExchangeRate":
		err := ExchangeRate(bot, update)
		if err != nil {
			return err
		}
	case "convert":
		err := ConvertCurrency(bot, update)
		if err != nil {
			return err
		}
	default:
		replay(bot, "ü§î –Ø –Ω–µ –∑–Ω–∞—é —Ç–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É.  \n–ù–∞–ø–∏—à–∏—Ç–µ `/help`, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã.\n", update.Message.Chat.ID)
	}
	return nil
}

func replay(bot *tgbotapi.BotAPI, text string, chatID int64) {
	msg := tgbotapi.NewMessage(chatID, text)
	bot.Send(msg)
}
